import MainSide from '@/src/MainSide'
import OneStory from '@/src/SmallComponents/OneStory/OneStory';
import TitleBar from '@/src/SmallComponents/TitleBar';
import Head from 'next/head'
import React, { useState } from 'react'
import styles from "../../styles/Story.module.css"
import Link from 'next/link';
import PageNumeration from '@/src/SmallComponents/PageNumeration/PageNumeration';

export default function stories(props) {
    const stories = props.stories ? props.stories : [];
    const sidebar = props.sidebar;

    const [currentPage, setCurrentPage] = useState(1);
    const itemsPerPage = 10;
    const totalPages = Math.ceil(stories.length / itemsPerPage);
    const startIndex = (currentPage - 1) * itemsPerPage;
    const endIndex = startIndex + itemsPerPage;
    const currentStories = stories.slice(startIndex, endIndex);

    return (
        <>
            <Head>
                <title>MPG Oberstufe - Eine Seite von Schüler für Schüler</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <MainSide sidebar={sidebar}>
                <TitleBar top={0}>Stories aus der Oberstufe</TitleBar>

                <div className={styles.stories}>
                    {/* {stories.length > 0 ? stories.map(e => {
                        return (
                            <OneStory data={e} key={e.id} bottom="22" />
                        )
                    }) : <>Etwas ist schiefgelaufen...</>} */}

                    {currentStories.map(e => {
                        return (
                            <OneStory data={e} key={e.id} bottom="22" />
                        )
                    })}

                    <PageNumeration setCurrentPage={setCurrentPage} totalPages={totalPages} currentPage={currentPage} elements={stories} />
                </div>
            </MainSide>
        </>
    )
}

export async function getServerSideProps() {
    const res = await fetch(`${process.env.STRAPI_URL}/api/stories?populate[Bild][true]&populate[Autor][populate][Bild][true]&sort=publishedAt:desc`)
    const stories = await res.json()

    const res2 = await fetch(`${process.env.HOSTING_DOMAIN}/api/sidebar`);
    const sidebar = await res2.json()

    return {
        props: {
            stories: stories.data,
            sidebar
        },
    }
}